#BlueJ class context
comment0.params=
comment0.target=GameEngine()
comment0.text=\n\ Cr\u00E9\u00E9\ le\ jeux\ et\ initialiser\ la\ carte.\n
comment1.params=userInterface
comment1.target=void\ setGUI(UserInterface)
comment10.params=
comment10.target=void\ look()
comment10.text=Redonner\ les\ informations\ de\ la\ salle\ et\ les\ sorties\ disponibles\n
comment11.params=
comment11.target=void\ eat()
comment11.text=Renvoi\ ,pour\ le\ moment,\ un\ message\ au\ joueur\ l'indiquant\ qu'il\ a\ d\u00E9j\u00E0\ mang\u00E9.\n\ \n
comment12.params=
comment12.target=void\ test()
comment12.text=\n\ Une\ m\u00E9thode\ test\ qui\ permet\ de\ tester\ tous\ les\ commandes\ du\ jeu\ en\ ex\u00E9cutant\ toutes\ les\ lignes\ d'un\ fichier\ de\ texte\ \n\ qui\ contient\ tous\ ces\ commandes.\ Cette\ m\u00E9thode\ \u00E9vite\ aux\ programmeurs\ de\ devoir\ tester\ \u00E0\ la\ main\ chaque\ commande\ du\ jeu.\n
comment13.params=
comment13.target=void\ credits()
comment14.params=
comment14.target=void\ endGame()
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\n\ Cr\u00E9\u00E9\ toutes\ les\ pi\u00E8ces\ et\ les\ liens\ entre\ chacunes.\n
comment3.params=
comment3.target=void\ createPlayer()
comment4.params=
comment4.target=void\ printLocationInfo()
comment4.text=Retourne\ les\ informations\ des\ sorties\ possibles\n\ @return\ Les\ sorties\ possibles\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\n\ Message\ d'acccueil\ \u00E0\ l'ouverture\ du\ jeux\ \!\n
comment6.params=commandLine
comment6.target=void\ interpretCommand(java.lang.String)
comment6.text=\n\ Quand\ une\ commande\ est\ enregistr\u00E9e,\ exc\u00E9cuter\ l'action\ associ\u00E9e\ \u00E0\ cette\ commande.\n\ Si\ la\ commande\ n'est\ pas\ dans\ la\ liste\ des\ commandes\ disponibles,\ afficher\ une\ message\ d'erreur.\n\ \n\ @param\ command\ La\ commande\ \u00E0\ analyser.\n\ \n
comment7.params=
comment7.target=void\ printHelp()
comment7.text=\n\ Affiche\ l'aide\ ainsi\ que\ les\ commandes\ possibles\ du\ jeu.\n
comment8.params=command
comment8.target=void\ goRoom(Command)
comment8.text=\ \n\ Proc\u00E9dure\ pour\ passer\ d'une\ salle\ \u00E0\ une\ autre.\ Si\ il\ n'y\ a\ pas\ de\ sortie,\ entr\u00E9\ un\ nouvelle\ direction.\ \n\ Sinon\ affich\u00E9\ un\ message\ d'erreur.\n
comment9.params=command
comment9.target=void\ back(Command)
comment9.text=Impl\u00E9menter\ la\ commande\ Back\ pour\ retourner\ dans\ la\ salle\ pr\u00E9c\u00E9dente.\n\ On\ stocke\ les\ salles\ visit\u00E9e\ pr\u00E9c\u00E9demment\ dans\ une\ Stack,\ \u00E0\ chaque\ fois\ on\ veut\ revenir\ sur\ notre\ pas,\ on\ utilise\ la\ commande\ "pop"\ qui\ prendre\n\ la\ deni\u00E8re\ valeur\ de\ la\ Stack\ (donc\ la\ derni\u00E8re\ salle\ visit\u00E9e)\ et\ qui\ retire\ cette\ salle\ de\ la\ Stack.\n\ Quand\ la\ Stack\ est\ vide,\ on\ est\ revenu\ au\ d\u00E9but\ du\ jeu.\n
numComments=15
